{"version":3,"sources":["constants/weatherConstants.js","components/Weather/weather.js"],"names":["CODE_ICONS_SVG","01d","01n","02d","02n","03n","03d","04d","04n","50d","50n","10n","10d","13d","13n","WeatherCodeIcon","_ref","code","react_default","a","createElement","className","src","weather","alt","Weather","this","props","loaded","country","city","description","temperature","weather_WeatherCodeIcon","maxtemp","mintemp","spinner","Component"],"mappings":"4KAAaA,EAAiB,CAC1BC,MAAO,4BACPC,MAAO,4BACPC,MAAO,+BACPC,MAAO,+BACPC,MAAO,+BACPC,MAAO,+BACPC,MAAO,+BACPC,MAAO,qCACPC,MAAO,+BACPC,MAAO,6BACPC,MAAO,8BACPC,MAAO,8BACPC,MAAO,8BACPC,MAAO,uCCPLC,cAAkB,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAF,OACpBC,EAAAC,EAAAC,cAAA,OACIC,UAAU,yBACVC,IAAKC,EAAuBN,GAC5BO,IAAI,WAGNC,mLAEE,OAAOC,KAAKC,MAAMC,OAEVV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEXK,KAAKC,MAAME,SAAWH,KAAKC,MAAMG,MACjCZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,UAAKM,KAAKC,MAAMG,OAIpBJ,KAAKC,MAAMI,aACXb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,YAAOM,KAAKC,MAAMI,cAItBL,KAAKC,MAAMK,aACXd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,YAAOM,KAAKC,MAAMK,YAAlB,SAIJd,EAAAC,EAAAC,cAACa,EAAD,CAAiBhB,KAAMS,KAAKC,MAAMV,OAGlCS,KAAKC,MAAMO,SAAWR,KAAKC,MAAMQ,SACjCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoBK,KAAKC,MAAMQ,QAA/C,QACAjB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoBK,KAAKC,MAAMO,QAA/C,WAMdhB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,aArCQC,aAsDPZ","file":"static/js/1.7f143d47.chunk.js","sourcesContent":["export const CODE_ICONS_SVG = {\r\n    '01d': '../../weather_svg/sun.svg', // clear skies\r\n    '01n': '../../weather_svg/sun.svg', // clear skies\r\n    '02d': '../../weather_svg/cloudy.svg', // few clouds\r\n    '02n': '../../weather_svg/cloudy.svg', // few clouds\r\n    '03n': '../../weather_svg/cloudy.svg', // scattered clouds\r\n    '03d': '../../weather_svg/cloudy.svg', // scattered clouds\r\n    '04d': '../../weather_svg/cloudy.svg', // broken clouds\r\n    '04n': '../../weather_svg/brokenclouds.svg', // broken clouds\r\n    '50d': '../../weather_svg/cloudy.svg', //fog\r\n    '50n': '../../weather_svg/mist.svg',  // mist\r\n    '10n': '../../weather_svg/rainy.svg', // light rain\r\n    '10d': '../../weather_svg/rainy.svg', // light rain\r\n    '13d': '../../weather_svg/snowy.svg', // light snow\r\n    '13n': '../../weather_svg/snowy.svg', // moderate snow\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as weather from '../../constants/weatherConstants';\r\nimport Spinner from '../Spinner/spinner';\r\nimport './styles.css';\r\nimport '../Error/error';\r\n\r\nconst WeatherCodeIcon = ({code}) =>\r\n    <img \r\n        className=\"Weather__icon floating\" \r\n        src={weather.CODE_ICONS_SVG[code]} \r\n        alt=\"icon\"\r\n    />\r\n\r\nclass Weather extends Component {\r\n    render() {\r\n        return this.props.loaded \r\n            ? (\r\n                <div className=\"Weather\">\r\n                    <div className=\"Weather__info\">\r\n                    { \r\n                        this.props.country && this.props.city && \r\n                        <div className=\"Weather__location\">\r\n                            <h1>{this.props.city}</h1>\r\n                        </div> \r\n                    }\r\n                    { \r\n                        this.props.description && \r\n                        <div className=\"Weather__description\">\r\n                            <span>{this.props.description}</span>  \r\n                        </div>\r\n                    }\r\n                    {\r\n                        this.props.temperature &&\r\n                        <div className=\"Weather__temperature\">\r\n                            <span>{this.props.temperature}ยบ</span>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        <WeatherCodeIcon code={this.props.code} />\r\n                    }\r\n                    { \r\n                        this.props.maxtemp && this.props.mintemp &&\r\n                        <div className=\"Weather__ranges\">\r\n                            <span className=\"Weather__mintemp\">{this.props.mintemp}ยบ</span>\r\n                            <span className=\"Weather__maxtemp\">{this.props.maxtemp}ยบ</span>\r\n                        </div>\r\n                    }\r\n                    </div>\r\n                </div>\r\n            )\r\n            : <Spinner />\r\n    }\r\n}\r\n\r\nWeather.propTypes = {\r\n    main: PropTypes.object,\r\n    coord: PropTypes.object,\r\n    loaded: PropTypes.bool,\r\n    description: PropTypes.string,\r\n    country: PropTypes.string,\r\n    city: PropTypes.string,\r\n    temperature: PropTypes.number,\r\n    code: PropTypes.string,\r\n    maxtemp: PropTypes.number,\r\n    mintemp: PropTypes.number\r\n}\r\n\r\nexport default Weather;"],"sourceRoot":""}